#load packages
devtools::install_github("Louisahadj/CellDestiny", quiet = TRUE)
library(CellDestiny)
library(ggplot2)
library(devtools)
#load packages
devtools::install_github("Louisahadj/CellDestiny", quiet = TRUE)
library(CellDestiny)
library(ggplot2)
library(devtools)
#load packages
devtools::install_github("Louisahadj/CellDestiny", quiet = TRUE)
library(CellDestiny)
library(ggplot2)
library(devtools)
#load packages
devtools::install_github("Louisahadj/CellDestiny", quiet = TRUE)
library(CellDestiny)
setwd(getwd())
# 1) fill parameters
file_path<-"../patient1_2_3_month1_3_12.csv.gz"
#load packages
devtools::install_github("Louisahadj/CellDestiny", quiet = TRUE)
library(CellDestiny)
library(CellDestiny)
#load packages
devtools::install_github("Louisahadj/CellDestiny", quiet = TRUE)
library(CellDestiny)
library(ggplot2)
# set working directory
setwd(getwd())
indiv_var="patient"
# import files 1 to 12 months
count_matrix <- read.csv("../patient1_2_3_month1_3_12.csv.gz", sep = ",")
metadata <- read.csv("../patient1_2_3_month1_3_12_metadata.csv.gz", sep = ",", colClasses='character', check.names=FALSE)
## Plot heatmap
distance<-"euclidean"
clusteringMeth<-"complete"
dendro<-"yes"
barcodes<-"no"
nclust<-0
list_var = c("month")
list_val = c("01","03", "12")
pool=FALSE
ind_val="patient1"
mat_heat<-MakeHeatmapMatrix(matrix = count_matrix, metadata = metadata, indivVar = indiv_var, indivVal = ind_val, listVar = list_var,  listVal = list_val, poolIndiv = pool)
p<-PlotHeatmap(wideMatrix = mat_heat, distance = distance, clustering = clusteringMeth, showDendro = dendro, showBarcodes = barcodes, nClusters = nclust, columnTextSize = 2)
ind_val="patient2"
mat_heat<-MakeHeatmapMatrix(matrix = count_matrix, metadata = metadata, indivVar = indiv_var, indivVal = ind_val, listVar = list_var,  listVal = list_val, poolIndiv = pool)
p<-PlotHeatmap(wideMatrix = mat_heat, distance = distance, clustering = clusteringMeth, showDendro = dendro, showBarcodes = barcodes, nClusters = nclust, columnTextSize = 2)
ind_val="patient3"
mat_heat<-MakeHeatmapMatrix(matrix = count_matrix, metadata = metadata, indivVar = indiv_var, indivVal = ind_val, listVar = list_var,  listVal = list_val, poolIndiv = pool)
p<-PlotHeatmap(wideMatrix = mat_heat, distance = distance, clustering = clusteringMeth, showDendro = dendro, showBarcodes = barcodes, nClusters = nclust, columnTextSize = 2)
## common parameters
indiv_val=c("patient1","patient2","patient3")
slider<-0
# Get category variable and values
catVar<-"type"
catVal<-c("Lymphocytes", "MyeloidCells")
# conditional value==color==list_var
condition="yes"
## changing parameters
condition_val<-c("01")
count_per_type<-MakeCategoryMatrices(count_matrix, metadata, indiv_var, indiv_val, catVar, catVal, slider, condition, condition_val)[[1]]
PlotCategories(count_per_type, slider, condition_val)
count_per_cat<-MakeCategoryMatrices(count_matrix, metadata, indiv_var, indiv_val, catVar, catVal, slider, condition, condition_val)[[2]]
PlotCategoryCounts(count_per_cat, slider, condition_val)
condition_val<-c("03")
count_per_type<-MakeCategoryMatrices(count_matrix, metadata, indiv_var, indiv_val, catVar, catVal, slider, condition, condition_val)[[1]]
PlotCategories(count_per_type, slider, condition_val)
count_per_cat<-MakeCategoryMatrices(count_matrix, metadata, indiv_var, indiv_val, catVar, catVal, slider, condition, condition_val)[[2]]
PlotCategoryCounts(count_per_cat, slider, condition_val)
condition_val<-c("12")
count_per_type<-MakeCategoryMatrices(count_matrix, metadata, indiv_var, indiv_val, catVar, catVal, slider, condition, condition_val)[[1]]
PlotCategories(count_per_type, slider, condition_val)
count_per_cat<-MakeCategoryMatrices(count_matrix, metadata, indiv_var, indiv_val, catVar, catVal, slider, condition, condition_val)[[2]]
PlotCategoryCounts(count_per_cat, slider, condition_val)
## common parameters
SBtransformation="arcsin"
indiv_val<-c("patient1", "patient2", "patient3")
color<-"patient"
## changing parameters
x_var<-c("month","type")
x_val<-c("01","Lymphocytes")
y_var<-c("month","type")
y_val<-c("01","MyeloidCells")
dot_mat<-MakeDotPlotMatrix(count_matrix, metadata, indiv_var, indiv_val,x_var, x_val,y_var, y_val, color)
PlotDotplot(dot_mat, indiv_var, color, SBtransformation)
## changing parameters
x_var<-c("month","type")
x_val<-c("03","Lymphocytes")
y_var<-c("month","type")
y_val<-c("03","MyeloidCells")
dot_mat<-MakeDotPlotMatrix(count_matrix, metadata, indiv_var, indiv_val,x_var, x_val,y_var, y_val, color)
PlotDotplot(dot_mat, indiv_var, color, SBtransformation)
#ggsave("images/dotplot_1month.png", dpi = 300)
## changing parameters
x_var<-c("month","type")
x_val<-c("12","Lymphocytes")
y_var<-c("month","type")
y_val<-c("12","MyeloidCells")
dot_mat<-MakeDotPlotMatrix(count_matrix, metadata, indiv_var, indiv_val,x_var, x_val,y_var, y_val, color)
PlotDotplot(dot_mat, indiv_var, color, SBtransformation, 10)
#ggsave("images/dotplot_1month.png", dpi = 300)
indiv_val=c("patient1","patient2","patient3")
list_var<-"type"
list_val<-c("CD34pos", "Lymphocytes", "MyeloidCells")
boxplotColor_var="month"
diversityVar<-"Number of barcodes"
div_mat<-CalculDiversity(count_matrix, metadata, indiv_var, indiv_val, list_var, list_val ,colorVar=boxplotColor_var, diversity=diversityVar)
PlotDiversity(div_mat,diversityVar, list_var, indiv_var, colorVar=boxplotColor_var )
diversityVar<-"Shannon Index"
div_mat<-CalculDiversity(count_matrix, metadata, indiv_var, indiv_val, list_var, list_val ,colorVar=boxplotColor_var, diversity=diversityVar)
PlotDiversity(div_mat,diversityVar, list_var, indiv_var, colorVar=boxplotColor_var )
indiv_val=c("patient1","patient2","patient3")
list_var<-"type"
list_val<-c("CD34pos", "Lymphocytes", "MyeloidCells")
color_var="month"
x_proportion="yes"
cum_mat<-MakeCumulativeDiagramMatrix(count_matrix, metadata, indiv_var, indiv_val, list_var, list_val ,color_var, xProp = x_proportion)
PlotCumulativeDiagram(cum_mat, indiv_var, color_var, textSize=15, xProp= x_proportion)
# import files 24 months
count_matrix24 <- read.csv("../patient2_3_month24.csv.gz", sep = ",")
metadata24 <- read.csv("../patient2_3_month24_metadata.csv.gz", sep = ",", colClasses='character', check.names=FALSE)
# merge 12 and 24 matrices
count_matrix12<-count_matrix[,c(1, grep(colnames(count_matrix), pattern = "12"))]
count_matrix12_24<-merge(count_matrix12, count_matrix24, by="Anonymized_ID", all = TRUE)
# add info to metadata
metadata24$month<-c("12", "24", "")
indiv_val=c("patient2","patient3")
top_var<-c("month", "type")
left_var<-c("month", "type")
right_var<-c("month", "type")
colorTer<-"yes"
top_val<-c("12", "CD34pos")
right_val<-c("12", "MyeloidCells")
left_val<-c("12", "Lymphocytes")
ter_mat<-MakeTernaryMatrix(count_matrix12_24, metadata24, indiv_var, indiv_val, top_var, top_val, right_var, right_val, left_var, left_val, addColor = colorTer)
PlotTernaryPlot(ter_mat, indiv_var, addColor = colorTer) + labs(title = paste0("Month 12"), subtitle = "Patient 2 & 3")
top_val<-c("24", "CD34pos")
right_val<-c("24", "MyeloidCells")
left_val<-c("24", "Lymphocytes")
ter_mat<-MakeTernaryMatrix(count_matrix12_24, metadata24, indiv_var, indiv_val, top_var, top_val, right_var, right_val, left_var, left_val, colorTer)
PlotTernaryPlot(ter_mat, indiv_var, addColor = colorTer) + labs(title = paste0("Month 24"), subtitle = "Patient 2 & 3")
## Plot heatmap
distance<-"euclidean"
clusteringMeth<-"complete"
dendro<-"yes"
barcodes<-"no"
nclust<-2
list_var = c("month")
list_val = c("12", "24")
pool=TRUE
mat_heat<-MakeHeatmapMatrix(matrix = count_matrix12_24, metadata = metadata24, indivVar = indiv_var, listVar = list_var,  listVal = list_val, poolIndiv = pool)
p<-PlotHeatmap(wideMatrix = mat_heat, distance = distance, clustering = clusteringMeth, showDendro = dendro, showBarcodes = barcodes, nClusters = nclust, columnTextSize = 2)
## parameters
list_var<-"type"
list_val<-metadata24$type
x_proportion="yes"
color_var<-"patient"
x_var<-c("month")
x_val<-c("12")
y_var<-c("month")
y_val<-c("24")
dot_mat<-MakeDotPlotMatrix(count_matrix12_24, metadata24, indiv_var, indiv_val,x_var, x_val,y_var, y_val, color_var)
pie_mat<-MakePieChartMatrix(dot_mat,indiv_var, color_var)
pie<-PlotPieChart(pie_mat, 5)
pie + labs(title = "Patients 2 & 3")
